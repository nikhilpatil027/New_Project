# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven, SonarQube, and Production Deployment

on:
  push:
    branches:
      - main 
 
  pull_request:
    branches:
      - main 
  
jobs:
  
  build_and_unit_test:
       
    runs-on: [self-hosted, staging]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # - name: Run Environment Setup Script (env-setup.sh)
      #   run: |
      #     chmod +x ./env-setup.sh
      #     ./env-setup.sh  # This sets up Java, Maven, etc.

      - name: Build with Maven
        run: mvn clean install -DskipTests
        if: ${{ github.event_name != 'pull_request' }} 

      - name: Run Unit Tests with Maven
        run: mvn test
        if: ${{ success() }} 

  # Sequential Jobs: SonarQube Analysis and Artifact Upload
  sonar_analysis:
    runs-on: [self-hosted, staging]
    needs: build_and_unit_test
    if: ${{ needs.build_and_unit_test.result == 'success' }} 
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
           java-version: 17
           distribution: 'zulu'
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=nikhilpatil_New_Project

  upload_artifact:
    runs-on: [self-hosted, staging]
    needs: build_and_unit_test
    if: ${{ needs.build_and_unit_test.result == 'success' }}  
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Upload Artifact to JFrog Artifactory
        run: |
          echo "Uploading artifact to JFrog Artifactory..."
          mkdir -p ~/.m2
          echo "<settings>
                  <servers>
                    <server>
                      <id>assignment</id>
                      username>${{ secrets.ARTIFACTORY_USERNAME }}</username>
                      <password>${{ secrets.ARTIFACTORY_API_KEY }}</password>
                    </server>
                  </servers>
                </settings>" > ~/.m2/settings.xml

          mvn clean deploy
       

  # Matrix Job: Deployment to Staging and Production (Self-Hosted EC2 with Tomcat installed)
  deploy:
    runs-on: self-hosted  
    needs: [sonar_analysis, upload_artifact] 
    strategy:
      matrix:
        environment: [staging, production]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy to Tomcat (Staging/Production)
        run: |
          echo "Deploying to ${{matrix.environment}}!!!"

         
          if [ "${{ matrix.environment }}" == "staging" ]; then
            sudo chown -R ubuntu:ubuntu /opt 
            cd /opt/apache-tomcat-10.1.34/webapps/
            curl -L -u "admin:cmVmdGtuOjAxOjE3NjgzOTY5NjA6SHBsRGpVck1ReUtuaTNFRjI2WXE1TGg0Y3lG" -O "http://43.205.214.203:8082/artifactory/hello-world-war-libs-release/com/efsavage/hello-world-war/1.0.45/hello-world-war-1.0.45.war"
          elif [ "${{ matrix.environment }}" == "production" ]; then
           
            if [[ $GITHUB_REF == "refs/heads/master" ]]; then
              cd /opt/apache-tomcat-10.1.34/webapps/
              curl -L -u "admin:cmVmdGtuOjAxOjE3NjgzOTY5NjA6SHBsRGpVck1ReUtuaTNFRjI2WXE1TGg0Y3lG" -O "http://43.205.214.203:8082/artifactory/hello-world-war-libs-release/com/efsavage/hello-world-war/1.0.45/hello-world-war-1.0.45.war"
            else
              echo "Skipping production deployment: Only from master branch"
            fi
          fi
        if: ${{ needs.upload_artifact.result == 'success' }}  

